/*
 * MIT License
 *
 *  Copyright (c) 2021 Markus, Lorenz, flwerner
 *
 *  Permission is hereby granted, free of charge, to any person obtaining a copy
 *  of this software and associated documentation files (the "Software"), to deal
 *  in the Software without restriction, including without limitation the rights
 *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  copies of the Software, and to permit persons to whom the Software is
 *  furnished to do so, subject to the following conditions:
 *
 *  The above copyright notice and this permission notice shall be included in all
 *  copies or substantial portions of the Software.
 * 
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  SOFTWARE.
 */
package de.edv.bestandsregister.GUI;

import de.edv.bestandsregister.Betriebsnummer;
import de.edv.bestandsregister.Entwurmen;
import de.edv.bestandsregister.Gedeckt;
import de.edv.bestandsregister.Impfungen;
import de.edv.bestandsregister.Klauenschneiden;
import de.edv.bestandsregister.SQL.Add;
import de.edv.bestandsregister.SQL.Del;
import de.edv.bestandsregister.SQL.Get;
import de.edv.bestandsregister.SQL.Update;
import de.edv.bestandsregister.Schaf;
import de.edv.bestandsregister.Schur;
import de.edv.bestandsregister.Transport;
import de.edv.bestandsregister.utils.ImageConverter;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.jdatepicker.DateModel;
import org.jdatepicker.JDatePicker;

/**
 *
 * @author Markus, flwerner
 */
public class main extends javax.swing.JFrame {

    /**
     * Creates new form main
     */
    private List<Schaf> schafe = null;
    private final int pWithd = 183;
    private final int pHeight = 193;

    public main() {
        initComponents();
        jTabPlane.setSelectedIndex(6);
        Get select = new Get();
        // Get Schafe from DB
        schafe = select.schafe();
        // Sort List
        Collections.sort(schafe, new SortByAbgang());
        // Set Table Data

        DefaultListModel listModel = new DefaultListModel();
        listModel.addAll(schafe);
        jTable.setModel(new GUITableModel(schafe));

        //lstausgabe.setListData(schafe.toArray());
        //lstausgabe.setCellRenderer(new CellRenderer());
        jTextAnzahl.setText(String.valueOf(schafe.size()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel22 = new javax.swing.JLabel();
        jTabPlane = new javax.swing.JTabbedPane();
        jTabBetriebsnummer = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        txfbnnummer = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txabnbemerkung = new javax.swing.JTextArea();
        jScrollPane10 = new javax.swing.JScrollPane();
        jListBetriebsnummer = new javax.swing.JList();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jTabEntwurmen = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel29 = new javax.swing.JLabel();
        jDateEntwurmen = new org.jdatepicker.JDatePicker();
        jScrollPane9 = new javax.swing.JScrollPane();
        jListEntwurmen = new javax.swing.JList();
        jTabGedeckt = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txfgedecktvaterkennung = new javax.swing.JTextField();
        jDateGedeckt = new org.jdatepicker.JDatePicker();
        jScrollPane8 = new javax.swing.JScrollPane();
        jListGedeckt = new javax.swing.JList();
        jTabImpfungen = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txfimpfungbemerkung = new javax.swing.JTextField();
        txfimpfungstoff = new javax.swing.JTextField();
        jDateImpfungen = new org.jdatepicker.JDatePicker();
        jScrollPane7 = new javax.swing.JScrollPane();
        jListImpfungen = new javax.swing.JList();
        jTabSchur = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jDateSchur = new org.jdatepicker.JDatePicker();
        jScrollPane5 = new javax.swing.JScrollPane();
        jListSchur = new javax.swing.JList();
        jTabTransport = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txftptransportmittel = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txftpgrund = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jDateTransport = new org.jdatepicker.JDatePicker();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListTransport = new javax.swing.JList();
        jTabSchaf = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabelZugang = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextGrundFÃ¼rAbgang = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jMutterKennung = new javax.swing.JTextField();
        jDateZugangsdatum = new org.jdatepicker.JDatePicker();
        jDateAbgang = new org.jdatepicker.JDatePicker();
        jLabel11 = new javax.swing.JLabel();
        JBtnBild = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jTextKennung = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextBemerkung = new javax.swing.JTextArea();
        JPicture = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jTabKlauenschneiden = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jDateKlauenschneiden = new org.jdatepicker.JDatePicker();
        jScrollPane6 = new javax.swing.JScrollPane();
        jListKlauenschneiden = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        btnadd = new javax.swing.JButton();
        btnchange = new javax.swing.JButton();
        btnloeschen = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jTextAnzahl = new javax.swing.JTextField();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();

        jLabel22.setText("jLabel22");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bestandsregister v2.0.0-pre1");
        setLocation(new java.awt.Point(350, 200));
        setResizable(false);

        jLabel24.setText("Betriebsnummer");

        jLabel26.setText("Bemerkung");

        txabnbemerkung.setColumns(20);
        txabnbemerkung.setRows(5);
        jScrollPane3.setViewportView(txabnbemerkung);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(jLabel26))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txfbnnummer, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(txfbnnummer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        jListBetriebsnummer.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListBetriebsnummer.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListBetriebsnummerValueChanged(evt);
            }
        });
        jScrollPane10.setViewportView(jListBetriebsnummer);

        javax.swing.GroupLayout jTabBetriebsnummerLayout = new javax.swing.GroupLayout(jTabBetriebsnummer);
        jTabBetriebsnummer.setLayout(jTabBetriebsnummerLayout);
        jTabBetriebsnummerLayout.setHorizontalGroup(
            jTabBetriebsnummerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabBetriebsnummerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jTabBetriebsnummerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jTabBetriebsnummerLayout.createSequentialGroup()
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jTabBetriebsnummerLayout.setVerticalGroup(
            jTabBetriebsnummerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabBetriebsnummerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jTabBetriebsnummerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jTabBetriebsnummerLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jTabBetriebsnummerLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabPlane.addTab("Betriebsnummer", jTabBetriebsnummer);

        jLabel29.setText("Datum");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jDateEntwurmen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel29))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jDateEntwurmen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jListEntwurmen.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListEntwurmen.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListEntwurmenValueChanged(evt);
            }
        });
        jScrollPane9.setViewportView(jListEntwurmen);

        javax.swing.GroupLayout jTabEntwurmenLayout = new javax.swing.GroupLayout(jTabEntwurmen);
        jTabEntwurmen.setLayout(jTabEntwurmenLayout);
        jTabEntwurmenLayout.setHorizontalGroup(
            jTabEntwurmenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabEntwurmenLayout.createSequentialGroup()
                .addGroup(jTabEntwurmenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jTabEntwurmenLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jTabEntwurmenLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jTabEntwurmenLayout.setVerticalGroup(
            jTabEntwurmenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabEntwurmenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jTabPlane.addTab("Entwurmen", jTabEntwurmen);

        jLabel32.setText("Datum");

        jLabel33.setText("Vaterkennung");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel32)
                    .addComponent(jLabel33))
                .addGap(25, 25, 25)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txfgedecktvaterkennung, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateGedeckt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateGedeckt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel32)))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(txfgedecktvaterkennung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jListGedeckt.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListGedeckt.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListGedecktValueChanged(evt);
            }
        });
        jScrollPane8.setViewportView(jListGedeckt);

        javax.swing.GroupLayout jTabGedecktLayout = new javax.swing.GroupLayout(jTabGedeckt);
        jTabGedeckt.setLayout(jTabGedecktLayout);
        jTabGedecktLayout.setHorizontalGroup(
            jTabGedecktLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabGedecktLayout.createSequentialGroup()
                .addGroup(jTabGedecktLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jTabGedecktLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jTabGedecktLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jTabGedecktLayout.setVerticalGroup(
            jTabGedecktLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabGedecktLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jTabPlane.addTab("Gedeckt", jTabGedeckt);

        jLabel19.setText("Impfstoff");

        jLabel20.setText("Bemerkung");

        jLabel21.setText("Datum");

        jListImpfungen.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListImpfungenValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(jListImpfungen);

        javax.swing.GroupLayout jTabImpfungenLayout = new javax.swing.GroupLayout(jTabImpfungen);
        jTabImpfungen.setLayout(jTabImpfungenLayout);
        jTabImpfungenLayout.setHorizontalGroup(
            jTabImpfungenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabImpfungenLayout.createSequentialGroup()
                .addGroup(jTabImpfungenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jTabImpfungenLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jTabImpfungenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel19)
                            .addComponent(jLabel21))
                        .addGap(18, 18, 18)
                        .addGroup(jTabImpfungenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jTabImpfungenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txfimpfungstoff, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                                .addComponent(txfimpfungbemerkung))
                            .addComponent(jDateImpfungen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jTabImpfungenLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jTabImpfungenLayout.setVerticalGroup(
            jTabImpfungenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabImpfungenLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jTabImpfungenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txfimpfungstoff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jTabImpfungenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txfimpfungbemerkung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jTabImpfungenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateImpfungen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jTabImpfungenLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel21)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        jTabPlane.addTab("Impfungen", jTabImpfungen);

        jLabel13.setText("Datum");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addGap(40, 40, 40)
                .addComponent(jDateSchur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel13))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jDateSchur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jListSchur.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListSchur.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListSchurValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(jListSchur);

        javax.swing.GroupLayout jTabSchurLayout = new javax.swing.GroupLayout(jTabSchur);
        jTabSchur.setLayout(jTabSchurLayout);
        jTabSchurLayout.setHorizontalGroup(
            jTabSchurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabSchurLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jTabSchurLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jTabSchurLayout.setVerticalGroup(
            jTabSchurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabSchurLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jTabPlane.addTab("Schur", jTabSchur);

        jLabel8.setText("Transportmittel");

        jLabel9.setText("Grund");

        jLabel10.setText("Datum");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateTransport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txftpgrund, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txftptransportmittel, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txftptransportmittel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txftpgrund, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateTransport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addContainerGap())))
        );

        jListTransport.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListTransport.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListTransportValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(jListTransport);

        javax.swing.GroupLayout jTabTransportLayout = new javax.swing.GroupLayout(jTabTransport);
        jTabTransport.setLayout(jTabTransportLayout);
        jTabTransportLayout.setHorizontalGroup(
            jTabTransportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabTransportLayout.createSequentialGroup()
                .addGroup(jTabTransportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jTabTransportLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jTabTransportLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jTabTransportLayout.setVerticalGroup(
            jTabTransportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabTransportLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        jTabPlane.addTab("Transport", jTabTransport);

        jLabelZugang.setText("Zugangsdatum");

        jLabel1.setText("Abgangsdatum");

        jLabel2.setText("Grund fÃ¼r Abgang");

        jLabel5.setText("Mutter Kennung");

        jMutterKennung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMutterKennungActionPerformed(evt);
            }
        });

        jLabel11.setText("Bild");

        JBtnBild.setText("...");
        JBtnBild.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBtnBildActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jMutterKennung, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelZugang)
                        .addComponent(jLabel1)
                        .addComponent(jTextGrundFÃ¼rAbgang, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(jDateZugangsdatum, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                        .addComponent(jDateAbgang, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JBtnBild)))
                .addGap(69, 69, 69))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelZugang)
                .addGap(5, 5, 5)
                .addComponent(jDateZugangsdatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateAbgang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextGrundFÃ¼rAbgang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jMutterKennung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(JBtnBild))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setText("Kennung");

        jLabel4.setText("Bemerkung");

        jTextBemerkung.setColumns(20);
        jTextBemerkung.setRows(5);
        jScrollPane2.setViewportView(jTextBemerkung);

        JPicture.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3)
                        .addComponent(jTextKennung, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(JPicture, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                        .addComponent(jSeparator1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextKennung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(JPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jTabSchafLayout = new javax.swing.GroupLayout(jTabSchaf);
        jTabSchaf.setLayout(jTabSchafLayout);
        jTabSchafLayout.setHorizontalGroup(
            jTabSchafLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabSchafLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jTabSchafLayout.setVerticalGroup(
            jTabSchafLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabSchafLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jTabSchafLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jTabSchafLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabPlane.addTab("Schaf", jTabSchaf);

        jLabel16.setText("Datum");

        jListKlauenschneiden.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListKlauenschneiden.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jListKlauenschneidenValueChanged(evt);
            }
        });
        jScrollPane6.setViewportView(jListKlauenschneiden);

        javax.swing.GroupLayout jTabKlauenschneidenLayout = new javax.swing.GroupLayout(jTabKlauenschneiden);
        jTabKlauenschneiden.setLayout(jTabKlauenschneidenLayout);
        jTabKlauenschneidenLayout.setHorizontalGroup(
            jTabKlauenschneidenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabKlauenschneidenLayout.createSequentialGroup()
                .addGroup(jTabKlauenschneidenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jTabKlauenschneidenLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel16)
                        .addGap(35, 35, 35)
                        .addComponent(jDateKlauenschneiden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jTabKlauenschneidenLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jTabKlauenschneidenLayout.setVerticalGroup(
            jTabKlauenschneidenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTabKlauenschneidenLayout.createSequentialGroup()
                .addGroup(jTabKlauenschneidenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jTabKlauenschneidenLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel16))
                    .addGroup(jTabKlauenschneidenLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jDateKlauenschneiden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTabPlane.addTab("Klauenschneiden", jTabKlauenschneiden);

        btnadd.setText("HinzufÃ¼gen");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btnchange.setText("Ãndern");
        btnchange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnchangeActionPerformed(evt);
            }
        });

        btnloeschen.setText("LÃ¶schen");
        btnloeschen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnloeschenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnadd, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(btnchange)
                .addGap(70, 70, 70)
                .addComponent(btnloeschen)
                .addGap(74, 74, 74))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnadd, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(btnchange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnloeschen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel6.setText("Ãbersicht");

        jLabel7.setText("Anzahl");

        jTextAnzahl.setEditable(false);

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane11.setViewportView(jTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextAnzahl, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addComponent(jTabPlane, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(20, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTabPlane, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jTextAnzahl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jTabPlane.getAccessibleContext().setAccessibleName("Schaf");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void clearAllFields() {

        // Clear Date Fields
        List<JDatePicker> date = Arrays.asList(jDateSchur, jDateTransport, jDateZugangsdatum, jDateAbgang, jDateKlauenschneiden, jDateEntwurmen, jDateGedeckt, jDateImpfungen);

        for (JDatePicker j : date) {
            DateModel<Calendar> dateModel = (DateModel<Calendar>) j.getModel();
            dateModel.setValue(null);
        }

        // Clear JList
        List<JList> listen = Arrays.asList(jListImpfungen, jListGedeckt, jListEntwurmen, jListBetriebsnummer, jListKlauenschneiden, jListTransport, jListSchur);

        for (JList j : listen) {
            j.setListData(new Object[]{});
        }

        // Clear Test Fields
        List<JTextField> text = Arrays.asList(txftptransportmittel, txftpgrund, jTextKennung, jTextGrundFÃ¼rAbgang, jMutterKennung, txfbnnummer, txfgedecktvaterkennung, txfimpfungstoff);

        for (JTextField j : text) {
            j.setText(null);
        }

        // Clear Text Area
        List<JTextArea> area = Arrays.asList(jTextBemerkung, txabnbemerkung);

        for (JTextArea j : area) {
            j.setText(null);
        }

    }

    // Betriebsnummer
    private void jListBetriebsnummerValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListBetriebsnummerValueChanged
        // TODO add your handling code here:
        if (jListBetriebsnummer.getSelectedValue() != null) {
            Betriebsnummer betrieb = (Betriebsnummer) jListBetriebsnummer.getSelectedValue();

            txfbnnummer.setText(betrieb.getBetriebsnummer());
            txabnbemerkung.setText(betrieb.getBemerkung());
        }
    }//GEN-LAST:event_jListBetriebsnummerValueChanged

    // Entwurmen
    private void jListEntwurmenValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListEntwurmenValueChanged
        // TODO add your handling code here:
        if (jListEntwurmen.getSelectedValue() != null) {
            Entwurmen entwurmen = (Entwurmen) jListEntwurmen.getSelectedValue();

            Calendar calendar = Calendar.getInstance();
            calendar.setTime(entwurmen.getDatum());
            DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateEntwurmen.getModel();
            dateModel.setValue(calendar);
        }
    }//GEN-LAST:event_jListEntwurmenValueChanged

    // Gedeckt
    private void jListGedecktValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListGedecktValueChanged
        // TODO add your handling code here:
        if (jListGedeckt.getSelectedValue() != null) {
            Gedeckt gedeckt = (Gedeckt) jListGedeckt.getSelectedValue();

            txfgedecktvaterkennung.setText(gedeckt.getVaterkennung());
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(gedeckt.getDatum());
            DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateGedeckt.getModel();
            dateModel.setValue(calendar);
        }
    }//GEN-LAST:event_jListGedecktValueChanged

    // Inpfungen
    private void jListImpfungenValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListImpfungenValueChanged
        // TODO add your handling code here:
        if (jListImpfungen.getSelectedValue() != null) {
            Impfungen impfung = (Impfungen) jListImpfungen.getSelectedValue();

            txfimpfungstoff.setText(impfung.getImpfstoff());
            txfimpfungbemerkung.setText(impfung.getBemerkung());

            Calendar calendar = Calendar.getInstance();
            calendar.setTime(impfung.getDatum());
            DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateImpfungen.getModel();
            dateModel.setValue(calendar);
        }
    }//GEN-LAST:event_jListImpfungenValueChanged

    // Schur
    private void jListSchurValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListSchurValueChanged
        // TODO add your handling code here:
        if (jListSchur.getSelectedValue() != null) {
            Schur schur = (Schur) jListSchur.getSelectedValue();

            Calendar calendar = Calendar.getInstance();
            calendar.setTime(schur.getDatum());
            DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateSchur.getModel();
            dateModel.setValue(calendar);
        }
    }//GEN-LAST:event_jListSchurValueChanged

    // Transport
    private void jListTransportValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListTransportValueChanged
        // TODO add your handling code here:
        if (jListTransport.getSelectedValue() != null) {
            Transport transport = (Transport) jListTransport.getSelectedValue();

            txftptransportmittel.setText(transport.getTransportMittel());
            txftpgrund.setText(transport.getGrund());

            Calendar calendar = Calendar.getInstance();
            calendar.setTime(transport.getDatum());
            DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateTransport.getModel();
            dateModel.setValue(calendar);
        }
    }//GEN-LAST:event_jListTransportValueChanged

    // Klauenschneiden
    private void jListKlauenschneidenValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jListKlauenschneidenValueChanged
        // TODO add your handling code here:
        if (jListKlauenschneiden.getSelectedValue() != null) {
            Klauenschneiden klauen = (Klauenschneiden) jListKlauenschneiden.getSelectedValue();

            Calendar calendar = Calendar.getInstance();
            calendar.setTime(klauen.getDatum());
            DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateKlauenschneiden.getModel();
            dateModel.setValue(calendar);
        }
    }//GEN-LAST:event_jListKlauenschneidenValueChanged

    // Update Main JList
    private void updateListView(Schaf obj) {
        schafe.add((Schaf) obj);
        // Sort List
        Collections.sort(schafe, new SortByAbgang());
        // Set List to JList
        jTable.setModel(new GUITableModel(schafe));
        jTable.repaint();
    }

    private void updateListView(Object Schaf, boolean remove) {
        // Remove Object from List
        schafe.remove(jTable.getSelectedRow());
        // Sort List
        Collections.sort(schafe, new SortByAbgang());
        // Set List to JList
        jTable.setModel(new GUITableModel(schafe));
        jTable.repaint();
    }

    // Update given JList
    private void updateListView(Object obj, JList list) {
        ArrayList<Object> objList = new ArrayList<Object>();
        for (int i = 0; i < list.getModel().getSize(); i++) {
            objList.add(list.getModel().getElementAt(i));
        }
        objList.add(obj);
        list.setListData(objList.toArray());
        list.repaint();
    }

    // Update given JList
    private void updateListView(Object obj, JList list, boolean remove) {
        ArrayList<Object> objList = new ArrayList<Object>();
        for (int i = 0; i < list.getModel().getSize(); i++) {
            objList.add(list.getModel().getElementAt(i));
        }
        objList.remove(list.getSelectedIndex());
        list.setListData(objList.toArray());
        list.repaint();
    }

    // HinzufÃ¼gen
    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        Add insert = new Add();
        if (jTable.getSelectedRow() != -1) {
            String schafID = ((Schaf) schafe.get(jTable.getSelectedRow())).getSchafID();
            switch (jTabPlane.getSelectedIndex()) {
                // Schur
                case 4:
                    Schur schur = new Schur(schafID);
                    if (jDateSchur.getModel().getValue() != null) {
                        schur.setDatum(new java.sql.Date(((GregorianCalendar) jDateSchur.getModel().getValue()).getTimeInMillis()));

                        insert.schur(schur);
                        updateListView(schur, jListSchur);
                    } else {
                        JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst ein Datum auswÃ¤hlen.", "Fehler",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    break;

                // Betriebsnummer
                case 0:
                    Betriebsnummer betrieb = new Betriebsnummer(schafID);
                    betrieb.setBemerkung(txabnbemerkung.getText());
                    if (!txfbnnummer.getText().isBlank()) {
                        betrieb.setBetriebsnummer(txfbnnummer.getText());

                        insert.betriebsnummer(betrieb);
                        updateListView(betrieb, jListBetriebsnummer);
                    } else {
                        JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst eine Betriebsnummer eingeben.", "Fehler",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    break;

                // Entwurmen
                case 1:
                    Entwurmen entwurmen = new Entwurmen(schafID);
                    if (jDateSchur.getModel().getValue() != null) {
                        entwurmen.setDatum(new java.sql.Date(((GregorianCalendar) jDateEntwurmen.getModel().getValue()).getTimeInMillis()));

                        insert.entwurmen(entwurmen);
                        updateListView(entwurmen, jListEntwurmen);
                    } else {
                        JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst ein Datum auswÃ¤hlen.", "Fehler",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    break;

                // Gedeckt
                case 2:
                    Gedeckt gedeckt = new Gedeckt(schafID);
                    if (!txfgedecktvaterkennung.getText().isBlank()) {
                        gedeckt.setDatum(new java.sql.Date(((GregorianCalendar) jDateGedeckt.getModel().getValue()).getTimeInMillis()));
                        gedeckt.setVaterkennung(txfgedecktvaterkennung.getText());

                        insert.gedeckt(gedeckt);
                        updateListView(gedeckt, jListGedeckt);
                    } else {
                        JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst ein Datum auswÃ¤hlen und Vaterkennung eingeben.", "Fehler",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    break;

                // Impfungen
                case 3:
                    Impfungen impfungen = new Impfungen(schafID);
                    if (!txfimpfungstoff.getText().isBlank() || jDateImpfungen.getModel().getValue() != null) {
                        impfungen.setBemerkung(txfimpfungbemerkung.getText());
                        impfungen.setImpfstoff(txfimpfungstoff.getText());
                        impfungen.setDatum(new java.sql.Date(((GregorianCalendar) jDateImpfungen.getModel().getValue()).getTimeInMillis()));

                        insert.impfungen(impfungen);
                        updateListView(impfungen, jListImpfungen);
                    } else {
                        JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst ein Impfstoff und Datum angeben.", "Fehler",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    break;

                // Transport
                case 5:
                    Transport transport = new Transport(schafID);
                    if (!txftpgrund.getText().isBlank()) {
                        transport.setGrund(txftpgrund.getText());
                        transport.setTransportMittel(txftptransportmittel.getText());
                        transport.setDatum(new java.sql.Date(((GregorianCalendar) jDateTransport.getModel().getValue()).getTimeInMillis()));

                        insert.transport(transport);
                        updateListView(transport, jListTransport);
                    } else {
                        JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst ein Transportgrund angeben.", "Fehler",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    break;

                // Klauenschneiden
                case 7:
                    Klauenschneiden klauen = new Klauenschneiden(schafID);
                    if (jDateKlauenschneiden.getModel().getValue() != null) {
                        klauen.setDatum(new java.sql.Date(((GregorianCalendar) jDateKlauenschneiden.getModel().getValue()).getTimeInMillis()));

                        insert.klauenschneiden(klauen);
                        updateListView(klauen, jListKlauenschneiden);
                    } else {
                        JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst ein Datum auswÃ¤hlen.", "Fehler",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    break;

                default:
                    break;
            }
        } else {
            if (jTabPlane.getSelectedIndex() == 6) {
                Schaf schaf = new Schaf();

                if (!jTextKennung.getText().isBlank()) {

                    if (jTextGrundFÃ¼rAbgang != null) {
                        schaf.setGrundFÃ¼rAbgang(jTextGrundFÃ¼rAbgang.getText());
                    }
                    schaf.setMutterkennung(jMutterKennung.getText());
                    schaf.setKennung(jTextKennung.getText());
                    if (jTextBemerkung != null) {
                        schaf.setBemerkung(jTextBemerkung.getText());
                    }
                    if (jDateAbgang.getModel().getValue() != null) {
                        schaf.setDatumAbgang(new java.sql.Date(((GregorianCalendar) jDateAbgang.getModel().getValue()).getTimeInMillis()));
                    }
                    if (jDateAbgang.getModel().getValue() != null) {
                        schaf.setDatumZugang(new java.sql.Date(((GregorianCalendar) jDateZugangsdatum.getModel().getValue()).getTimeInMillis()));
                    }
                    Icon icon = JPicture.getIcon();
                    schaf.setBild(ImageConverter.iconToImage(icon));

                    // Scale Picture after DB Inset
                    ImageIcon image = (ImageIcon)icon;
                    Image inew = image.getImage().getScaledInstance(pWithd, pHeight, java.awt.Image.SCALE_SMOOTH);
                    JPicture.setIcon(new ImageIcon(inew));
                    
                    insert.schaf(schaf);
                    updateListView(schaf);
                } else {
                    JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst eine Kennung vergeben.", "Fehler",
                            JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst ein Schaf aus der Ãbersichtsliste auswÃ¤hlen.", "Fehler",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnaddActionPerformed

    // Button LÃ¶schen
    private void btnloeschenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnloeschenActionPerformed
        // TODO add your handling code here:
        Del del = new Del();
        if (jTable.getSelectedRow() != -1) {
            String schafID = ((Schaf) schafe.get(jTable.getSelectedRow())).getSchafID();
            switch (jTabPlane.getSelectedIndex()) {
                // Schur
                case 4:
                    Schur schur = (Schur) jListSchur.getSelectedValue();
                    if (schur != null) {
                        schur.setDatum(new java.sql.Date(((GregorianCalendar) jDateSchur.getModel().getValue()).getTimeInMillis()));

                        del.schur(schur);
                        updateListView(schur, jListSchur, true);
                    } else {
                        JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst ein Schur Eintrag aus der Ãbersichtsliste auswÃ¤hlen.", "Fehler",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    break;

                // Betriebsnummer
                case 0:
                    Betriebsnummer betrieb = (Betriebsnummer) jListBetriebsnummer.getSelectedValue();
                    if (betrieb != null) {
                        betrieb.setBemerkung(txabnbemerkung.getText());
                        betrieb.setBetriebsnummer(txfbnnummer.getText());

                        del.betriebsnummer(betrieb);
                        updateListView(betrieb, jListBetriebsnummer, true);
                    } else {
                        JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst ein Betriebsnummer Eintrag aus der Ãbersichtsliste auswÃ¤hlen.", "Fehler",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    break;

                // Entwurmen
                case 1:
                    Entwurmen entwurmen = (Entwurmen) jListEntwurmen.getSelectedValue();
                    if (entwurmen != null) {
                        entwurmen.setDatum(new java.sql.Date(((GregorianCalendar) jDateEntwurmen.getModel().getValue()).getTimeInMillis()));

                        del.entwurmen(entwurmen);
                        updateListView(entwurmen, jListEntwurmen, true);
                    } else {
                        JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst ein Entwurmen Eintrag aus der Ãbersichtsliste auswÃ¤hlen.", "Fehler",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    break;

                // Gedeckt
                case 2:
                    Gedeckt gedeckt = (Gedeckt) jListGedeckt.getSelectedValue();
                    if (gedeckt != null) {
                        gedeckt.setDatum(new java.sql.Date(((GregorianCalendar) jDateGedeckt.getModel().getValue()).getTimeInMillis()));
                        gedeckt.setVaterkennung(txfgedecktvaterkennung.getText());

                        updateListView(gedeckt, jListGedeckt, true);
                        del.gedeckt(gedeckt);
                    } else {
                        JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst ein Gedeckt Eintrag aus der Ãbersichtsliste auswÃ¤hlen.", "Fehler",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    break;

                // Impfungen
                case 3:
                    Impfungen impfungen = (Impfungen) jListImpfungen.getSelectedValue();
                    if (impfungen != null) {
                        impfungen.setBemerkung(txfimpfungbemerkung.getText());
                        impfungen.setImpfstoff(txfimpfungstoff.getText());
                        impfungen.setDatum(new java.sql.Date(((GregorianCalendar) jDateImpfungen.getModel().getValue()).getTimeInMillis()));

                        del.impfungen(impfungen);
                        updateListView(impfungen, jListImpfungen, true);
                    } else {
                        JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst ein Impf Eintrag aus der Ãbersichtsliste auswÃ¤hlen.", "Fehler",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    break;

                // Transport
                case 5:
                    Transport transport = (Transport) jListTransport.getSelectedValue();
                    if (transport != null) {
                        transport.setGrund(txftpgrund.getText());
                        transport.setTransportMittel(txftptransportmittel.getText());
                        transport.setDatum(new java.sql.Date(((GregorianCalendar) jDateTransport.getModel().getValue()).getTimeInMillis()));

                        del.transport(transport);
                        updateListView(transport, jListTransport, true);
                    } else {
                        JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst ein Transport Eintrag aus der Ãbersichtsliste auswÃ¤hlen.", "Fehler",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    break;

                // Klauenschneiden
                case 7:
                    Klauenschneiden klauen = (Klauenschneiden) jListKlauenschneiden.getSelectedValue();
                    if (klauen != null) {
                        klauen.setDatum(new java.sql.Date(((GregorianCalendar) jDateKlauenschneiden.getModel().getValue()).getTimeInMillis()));

                        del.klauenschneiden(klauen);
                        updateListView(klauen, jListKlauenschneiden, true);
                    } else {
                        JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst ein Klauen Eintrag aus der Ãbersichtsliste auswÃ¤hlen.", "Fehler",
                                JOptionPane.ERROR_MESSAGE);
                    }
                    break;
                // Schaf
                case 6:
                    Schaf schaf = (Schaf) schafe.get(jTable.getSelectedRow());

                    schaf.setGrundFÃ¼rAbgang(jTextGrundFÃ¼rAbgang.getText());
                    schaf.setMutterkennung(jMutterKennung.getText());
                    schaf.setKennung(jTextKennung.getText());
                    schaf.setBemerkung(jTextBemerkung.getText());
                    if (jDateAbgang.getModel().getValue() != null) {
                        schaf.setDatumAbgang(new java.sql.Date(((GregorianCalendar) jDateAbgang.getModel().getValue()).getTimeInMillis()));
                    }
                    if (jDateZugangsdatum.getModel().getValue() != null) {
                        schaf.setDatumZugang(new java.sql.Date(((GregorianCalendar) jDateZugangsdatum.getModel().getValue()).getTimeInMillis()));
                    }

                    del.schaf(schaf);
                    updateListView(schaf, true);
                    clearAllFields();
                    break;
                default:
                    break;
            }
        } else {
            JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst ein Schaf aus der Ãbersicht auswÃ¤hlen.", "Fehler",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnloeschenActionPerformed

    private void btnchangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnchangeActionPerformed
        // TODO add your handling code here:
        Update update = new Update();
        if (jTable.getSelectedRow() != -1) {
            String schafID = ((Schaf) schafe.get(jTable.getSelectedRow())).getSchafID();
            switch (jTabPlane.getSelectedIndex()) {
                // Schur
                case 4:
                    Schur schur = new Schur(schafID);
                    schur.setDatum(new java.sql.Date(((GregorianCalendar) jDateSchur.getModel().getValue()).getTimeInMillis()));

                    update.schur(schur);
                    updateListView(schur, jListSchur, true);
                    updateListView(schur, jListSchur);
                    break;

                // Betriebsnummer
                case 0:
                    Betriebsnummer betrieb = new Betriebsnummer(schafID);
                    betrieb.setBemerkung(txabnbemerkung.getText());
                    betrieb.setBetriebsnummer(txfbnnummer.getText());

                    update.betriebsnummer(betrieb);
                    updateListView(betrieb, jListBetriebsnummer, true);
                    updateListView(betrieb, jListBetriebsnummer);
                    break;

                // Entwurmen
                case 1:
                    Entwurmen entwurmen = new Entwurmen(schafID);
                    entwurmen.setDatum(new java.sql.Date(((GregorianCalendar) jDateEntwurmen.getModel().getValue()).getTimeInMillis()));

                    update.entwurmen(entwurmen);
                    updateListView(entwurmen, jListEntwurmen, true);
                    updateListView(entwurmen, jListEntwurmen);
                    break;

                // Gedeckt
                case 2:
                    Gedeckt gedeckt = new Gedeckt(schafID);
                    gedeckt.setDatum(new java.sql.Date(((GregorianCalendar) jDateGedeckt.getModel().getValue()).getTimeInMillis()));
                    gedeckt.setVaterkennung(txfgedecktvaterkennung.getText());

                    update.gedeckt(gedeckt);
                    updateListView(gedeckt, jListGedeckt, true);
                    updateListView(gedeckt, jListGedeckt);
                    break;

                // Impfungen
                case 3:
                    Impfungen impfungen = new Impfungen(schafID);
                    impfungen.setBemerkung(txfimpfungbemerkung.getText());
                    impfungen.setImpfstoff(txfimpfungstoff.getText());
                    impfungen.setDatum(new java.sql.Date(((GregorianCalendar) jDateImpfungen.getModel().getValue()).getTimeInMillis()));

                    update.impfungen(impfungen);
                    updateListView(impfungen, jListImpfungen, true);
                    updateListView(impfungen, jListImpfungen);

                    break;

                // Transport
                case 5:
                    Transport transport = new Transport(schafID);
                    transport.setGrund(txftpgrund.getText());
                    transport.setTransportMittel(txftptransportmittel.getText());
                    transport.setDatum(new java.sql.Date(((GregorianCalendar) jDateTransport.getModel().getValue()).getTimeInMillis()));

                    update.transport(transport);
                    updateListView(transport, jListTransport, true);
                    updateListView(transport, jListTransport);
                    break;

                // Klauenschneiden
                case 7:
                    Klauenschneiden klauen = new Klauenschneiden(schafID);
                    klauen.setDatum(new java.sql.Date(((GregorianCalendar) jDateKlauenschneiden.getModel().getValue()).getTimeInMillis()));

                    update.klauenschneiden(klauen);
                    updateListView(klauen, jListKlauenschneiden, true);
                    updateListView(klauen, jListKlauenschneiden);
                    break;
                // Schaf
                case 6:
                    Schaf schaf = new Schaf(schafID);

                    schaf.setGrundFÃ¼rAbgang(jTextGrundFÃ¼rAbgang.getText());
                    schaf.setMutterkennung(jMutterKennung.getText());
                    schaf.setKennung(jTextKennung.getText());
                    schaf.setBemerkung(jTextBemerkung.getText());
                    if (jDateAbgang.getModel().getValue() != null) {
                        schaf.setDatumAbgang(new java.sql.Date(((GregorianCalendar) jDateAbgang.getModel().getValue()).getTimeInMillis()));
                    }
                    if (jDateZugangsdatum.getModel().getValue() != null) {
                        schaf.setDatumZugang(new java.sql.Date(((GregorianCalendar) jDateZugangsdatum.getModel().getValue()).getTimeInMillis()));
                    }

                    update.schaf(schaf);
                    updateListView(schaf, true);
                    updateListView(schaf);
                    break;
                default:
                    break;
            }
        } else {
            JOptionPane.showMessageDialog(new JFrame(), "Bitte zuerst ein Feld zum Ãndern auswÃ¤hlen.", "Fehler",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnchangeActionPerformed

    /**
     * Bild Button
     *
     * @param evt
     */
    private void JBtnBildActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBtnBildActionPerformed
        // JFileChooser-Objekt erstellen
        JFileChooser chooser = new JFileChooser("Dateiauswahl");
        // Dialog zum Oeffnen von Dateien anzeigen
        FileFilter filter = new FileNameExtensionFilter("Bilder", "png", "jpg");
        chooser.setFileFilter(filter);
        chooser.setFileHidingEnabled(true);

        int rueckgabeWert = chooser.showOpenDialog(null);

        /* Abfrage, ob auf "Ãffnen" geklickt wurde */
        if (rueckgabeWert == JFileChooser.APPROVE_OPTION) {
            try {
                BufferedImage bfimg = ImageIO.read(new File(chooser.getSelectedFile().getAbsolutePath()));
                JPicture.setIcon(new ImageIcon(bfimg));
            } catch (IOException ex) {
                Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_JBtnBildActionPerformed

    private void jMutterKennungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMutterKennungActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMutterKennungActionPerformed

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
        // TODO add your handling code here:
        clearAllFields();
        if (jTable.getSelectedRow() != -1) {
            Schaf schaf = (Schaf) schafe.get(jTable.getSelectedRow());
            Get select = new Get();

            ArrayList<Betriebsnummer> betriebsnummerList = select.betriebsnummer(schaf.getSchafID());
            ArrayList<Entwurmen> entwurmenList = select.entwurmen(schaf.getSchafID());
            ArrayList<Gedeckt> gedecktList = select.gedeckt(schaf.getSchafID());
            ArrayList<Impfungen> impfungenList = select.impfungen(schaf.getSchafID());
            ArrayList<Klauenschneiden> klauenList = select.klauenschneiden(schaf.getSchafID());
            ArrayList<Schur> schurList = select.schur(schaf.getSchafID());
            ArrayList<Transport> transportList = select.transport(schaf.getSchafID());

            // Schur
            // Add First Item in List as Displayed
            if (schurList.size() > 0) {
                Calendar calendar = Calendar.getInstance();
                calendar.setTime(schurList.get(0).getDatum());
                DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateSchur.getModel();
                dateModel.setValue(calendar);

                jListSchur.setListData(schurList.toArray());
            } else {
                DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateSchur.getModel();
                dateModel.setValue(null);
                jListSchur.setListData(new Object[]{});
            }

            // Impfungen
            if (impfungenList.size() > 0) {
                // Impfung
                txfimpfungstoff.setText(impfungenList.get(0).getImpfstoff());
                txfimpfungbemerkung.setText(impfungenList.get(0).getBemerkung());

                Calendar calendar = Calendar.getInstance();
                calendar.setTime(impfungenList.get(0).getDatum());
                DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateImpfungen.getModel();
                dateModel.setValue(calendar);

                jListImpfungen.setListData(impfungenList.toArray());
            } else {
                txfimpfungstoff.setText(null);
                txfimpfungbemerkung.setText(null);
                DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateImpfungen.getModel();
                dateModel.setValue(null);
                jListImpfungen.setListData(new Object[]{});
            }

            // Gedeckt
            if (gedecktList.size() > 0) {
                txfgedecktvaterkennung.setText(gedecktList.get(0).getVaterkennung());

                Calendar calendar = Calendar.getInstance();
                calendar.setTime(gedecktList.get(0).getDatum());
                DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateGedeckt.getModel();
                dateModel.setValue(calendar);

                jListGedeckt.setListData(gedecktList.toArray());
            } else {
                DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateGedeckt.getModel();
                dateModel.setValue(null);
                jListGedeckt.setListData(new Object[]{});
            }

            // Entwurmen
            if (entwurmenList.size() > 0) {
                Calendar calendar = Calendar.getInstance();
                calendar.setTime(entwurmenList.get(0).getDatum());
                DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateEntwurmen.getModel();
                dateModel.setValue(calendar);

                jListEntwurmen.setListData(entwurmenList.toArray());
            } else {
                DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateEntwurmen.getModel();
                dateModel.setValue(null);
                jListEntwurmen.setListData(new Object[]{});
            }

            // Betriebsnummer
            if (betriebsnummerList.size() > 0) {
                txfbnnummer.setText(betriebsnummerList.get(0).getBetriebsnummer());
                txabnbemerkung.setText(betriebsnummerList.get(0).getBemerkung());
                jListBetriebsnummer.setListData(betriebsnummerList.toArray());
            } else {
                txfbnnummer.setText(null);
                txabnbemerkung.setText(null);
                jListBetriebsnummer.setListData(new Object[]{});
            }

            // Klauenschneiden
            if (klauenList.size() > 0) {
                Calendar calendar = Calendar.getInstance();
                calendar.setTime(klauenList.get(0).getDatum());
                DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateKlauenschneiden.getModel();
                dateModel.setValue(calendar);

                jListKlauenschneiden.setListData(klauenList.toArray());
            } else {
                DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateKlauenschneiden.getModel();
                dateModel.setValue(null);
                jListKlauenschneiden.setListData(new Object[]{});
            }

            // Schaf
            if (schaf.getDatumZugang() != null && schaf.getDatumZugang().getTime() != 0) {
                Calendar calendar = Calendar.getInstance();
                calendar.setTime(schaf.getDatumZugang());
                DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateZugangsdatum.getModel();
                dateModel.setValue(calendar);
            }

            if (schaf.getDatumAbgang() != null && schaf.getDatumAbgang().getTime() != 0) {
                Calendar calendar = Calendar.getInstance();
                calendar.setTime(schaf.getDatumAbgang());
                DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateAbgang.getModel();
                dateModel.setValue(calendar);
            }

            jTextGrundFÃ¼rAbgang.setText(schaf.getGrundFÃ¼rAbgang());
            jMutterKennung.setText(schaf.getMutterkennung());
            jTextKennung.setText(schaf.getKennung());
            jTextBemerkung.setText(schaf.getBemerkung());

            // Transport
            if (transportList.size() > 0) {
                txftptransportmittel.setText(transportList.get(0).getTransportMittel());
                txftpgrund.setText(transportList.get(0).getGrund());

                Calendar calendar = Calendar.getInstance();
                calendar.setTime(transportList.get(0).getDatum());
                DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateTransport.getModel();
                dateModel.setValue(calendar);

                jListTransport.setListData(transportList.toArray());
            } else {
                txftptransportmittel.setText(null);
                txftpgrund.setText(null);
                DateModel<Calendar> dateModel = (DateModel<Calendar>) jDateTransport.getModel();
                dateModel.setValue(null);
                jListTransport.setListData(new Object[]{});
            }
        } else {
            jTable.repaint();
        }
    }//GEN-LAST:event_jTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    try {
                        javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel");
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (InstantiationException ex) {
                        Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IllegalAccessException ex) {
                        Logger.getLogger(main.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    //MaterialLookAndFeel.changeTheme(new MaterialOceanicTheme());
                    break;
                }
            }
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JBtnBild;
    private javax.swing.JLabel JPicture;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btnchange;
    private javax.swing.JButton btnloeschen;
    private javax.swing.Box.Filler filler1;
    private org.jdatepicker.JDatePicker jDateAbgang;
    private org.jdatepicker.JDatePicker jDateEntwurmen;
    private org.jdatepicker.JDatePicker jDateGedeckt;
    private org.jdatepicker.JDatePicker jDateImpfungen;
    private org.jdatepicker.JDatePicker jDateKlauenschneiden;
    private org.jdatepicker.JDatePicker jDateSchur;
    private org.jdatepicker.JDatePicker jDateTransport;
    private org.jdatepicker.JDatePicker jDateZugangsdatum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelZugang;
    private javax.swing.JList jListBetriebsnummer;
    private javax.swing.JList jListEntwurmen;
    private javax.swing.JList jListGedeckt;
    private javax.swing.JList jListImpfungen;
    private javax.swing.JList jListKlauenschneiden;
    private javax.swing.JList jListSchur;
    private javax.swing.JList jListTransport;
    private javax.swing.JTextField jMutterKennung;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel jTabBetriebsnummer;
    private javax.swing.JPanel jTabEntwurmen;
    private javax.swing.JPanel jTabGedeckt;
    private javax.swing.JPanel jTabImpfungen;
    private javax.swing.JPanel jTabKlauenschneiden;
    private javax.swing.JTabbedPane jTabPlane;
    private javax.swing.JPanel jTabSchaf;
    private javax.swing.JPanel jTabSchur;
    private javax.swing.JPanel jTabTransport;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jTextAnzahl;
    private javax.swing.JTextArea jTextBemerkung;
    private javax.swing.JTextField jTextGrundFÃ¼rAbgang;
    private javax.swing.JTextField jTextKennung;
    private javax.swing.JTextArea txabnbemerkung;
    private javax.swing.JTextField txfbnnummer;
    private javax.swing.JTextField txfgedecktvaterkennung;
    private javax.swing.JTextField txfimpfungbemerkung;
    private javax.swing.JTextField txfimpfungstoff;
    private javax.swing.JTextField txftpgrund;
    private javax.swing.JTextField txftptransportmittel;
    // End of variables declaration//GEN-END:variables
}
